spring:
  rabbitmq:
    addresses: localhost:5672
    virtual-host: /
    username: guest
    password: guest
    connection-timeout: 15000
    publisher-confirms: true
    publisher-returns: true
    template:
      mandatory: true
  http:
    encoding:
      charset: UTF-8
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: NON_NULL
  h2:
    console:
      enabled: true
  datasource:
    driver-class-name: org.h2.Driver
    schema: classpath:/schema-h2.sql
    # 内存形式
    url: jdbc:h2:mem:rabbitmq
    username:
    password:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化大小,最小,最大
      initial-size: 5
      min-idle: 10
      max-active: 300
      # 获取连接等待超时时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      # 配置监控统计拦截的filters,去掉后监控界面SQL无法统计,'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,log4j
      # 通过connect-properties打开慢mergeSql功能,慢SQL记录
      connect-properties:
        druid.stat.mergeSql: true
      filter:
        stat:
          slow-sql-millis: 5000
      # 合并多个druidDatasource的监控数据
      use-global-data-source-stat: true


server:
  port: 8001
  servlet:
    context-path: /
mybatis-plus:
  type-aliases-package: learning.rabbitmq.springboot.example.entity

system-constant:
  max-try-count: 3

logging:
  level:
    learning.rabbitmq.springboot.example: debug
    org.mybatis: trace